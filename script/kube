#!/bin/bash

# This is a script to automatically start a local minikube cluster for bot development

set -e # Prevent any kind of script failures

# Global Directory Variables
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )" # The directory of this script
REPO_DIR="$(dirname "$SCRIPT_DIR")" # The root directory of this repository

echo "🔎 Checking for required dependencies..."

set +e # Allow failures when checking for dependencies

which minikube > /dev/null

if [ $? -ne 0 ]; then
  echo "❌ Please install the minikube to continue! https://minikube.sigs.k8s.io/docs/start/ | Exiting..."
  exit 1
else
  echo "✅ minikube is installed"
fi

which kubectl > /dev/null

if [ $? -ne 0 ]; then
  echo "❌ Please install kubectl to continue! https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/ | Exiting..."
  exit 1
else
  echo "✅ kubectl is installed"
fi

read -p "Have you already run 'minikube start' to bring up your local cluster (y/n)? " CONT
if [ "$CONT" = "y" ]; then
  echo "✅ User confirmed cluster has been started";
else
  echo "❌ Exiting!";
  exit 1
fi

set -e # Prevent any kind of script failures

echo "☸️ Let's build a local minikube k8s cluster!"

echo "🐳 Binding Docker to minikube Docker engine..."
eval $(minikube docker-env)

echo "🔨 Building errbot:latest image"

docker build -t errbot:latest $REPO_DIR/src/errbot

echo "You're all set! Now you can run 'kubectl apply -f script/k8s/' to start applying the k8s resources!"
